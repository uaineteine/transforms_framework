{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary_600",
      "salary_700",
      "salary_500",
      "salary_400",
      "salary_620"
    ],
    "input_variables": [
      [
        "salary"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "salary": 6
    },
    "output_row_counts": {
      "salary_600": 2,
      "salary_700": 1,
      "salary_500": 1,
      "salary_400": 1,
      "salary_620": 1
    },
    "input_columns": {
      "salary": [
        "salary",
        "NAME",
        "age"
      ]
    },
    "output_columns": {
      "salary_600": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_700": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_500": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_400": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_620": [
        "salary",
        "NAME",
        "age"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 5
  },
  "uuid": "5b97c09c-e656-4c84-bbe2-ad4aa38ed4d6",
  "timestamp": "2025-09-18T06:03:00.502168+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Partitions a DataFrame into subtables by 'salary'",
  "meta_version": "1.0",
  "name": "PartitionByValue",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "salary"
  },
  "transform_id": "PartVal",
  "target_tables": [
    "salary_600",
    "salary_700",
    "salary_500",
    "salary_400",
    "salary_620"
  ],
  "target_variables": [
    "salary"
  ],
  "partition_column": "salary",
  "suffix_format": "_{value}",
  "class_type": "PartitionByValue"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [
      [
        "var"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": [
      [
        "var"
      ]
    ],
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "positions": [
        "age",
        "name",
        "var",
        "position",
        "skill"
      ]
    },
    "output_columns": {
      "positions": [
        "age",
        "name",
        "position",
        "skill"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "e9681801-a1cd-4e37-9f9b-544cf515eb06",
  "timestamp": "2025-09-18T06:03:02.900170+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes specified variable(s) from a dataframe",
  "meta_version": "1.0",
  "name": "DropVariable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "positions"
  },
  "transform_id": "DropVar",
  "target_tables": [
    "positions"
  ],
  "target_variables": [
    "var"
  ],
  "deleted_variables": [
    "var"
  ],
  "class_type": "DropVariable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      [
        "salary",
        "age"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": [
      "NAME"
    ],
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "salary": [
        "salary",
        "NAME",
        "age"
      ]
    },
    "output_columns": {
      "salary": [
        "salary",
        "age"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "43418e5f-e56e-40b4-b90f-5526cbcba503",
  "timestamp": "2025-09-18T06:03:03.000168+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Subsets a dataframe to retain only specified variable(s)",
  "meta_version": "1.0",
  "name": "SubsetTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "salary"
  },
  "transform_id": "SubsetTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "salary",
    "age"
  ],
  "class_type": "SubsetTable"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "positions": 5
    },
    "output_row_counts": {
      "positions": 5
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "4609a54e-339f-4e99-9a4c-63f17a6fb2dc",
  "timestamp": "2025-09-18T06:03:03.090169+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "positions"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "positions"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "salary": 6
    },
    "output_row_counts": {
      "salary": 5
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "1464ac74-a6f9-484d-8bc4-0118a289dc71",
  "timestamp": "2025-09-18T06:03:03.811168+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "salary"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      [
        "salary"
      ]
    ],
    "output_variables": [
      [
        "income"
      ]
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "salary": [
        "salary",
        "age"
      ]
    },
    "output_columns": {
      "salary": [
        "income",
        "age"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "4c90588e-f7e0-43c2-9e2b-82f9a3cc584b",
  "timestamp": "2025-09-18T06:03:04.442167+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Renames specified columns in a dataframe",
  "meta_version": "1.0",
  "name": "RenameTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "salary"
  },
  "transform_id": "RenmTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "salary"
  ],
  "rename_map": {
    "salary": "income"
  },
  "new_names": [
    "income"
  ],
  "class_type": "RenameTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "salary": 5
    },
    "output_row_counts": {
      "salary": 3
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "a35d3a97-5291-4523-a741-a5dc4469f44f",
  "timestamp": "2025-09-18T06:03:04.612168+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Filters rows in a dataframe using a backend-specific condition",
  "meta_version": "1.0",
  "name": "ComplexFilter",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "salary"
  },
  "transform_id": "RowFilter",
  "target_tables": [
    "salary"
  ],
  "target_variables": [],
  "condition_map": {
    "pyspark": {}
  },
  "backend": "pyspark",
  "condition_string": "\"pyspark\": lambda df: df.filter(col(\"income\") >= 600)",
  "class_type": "ComplexFilter"
}
{
  "log_info": {
    "input_tables": [
      "positions",
      "salary"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "age"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "positions": 5,
      "salary": 3
    },
    "output_row_counts": {
      "example_join": 2
    },
    "input_columns": {
      "positions": [
        "age",
        "name",
        "position",
        "skill"
      ],
      "salary": [
        "income",
        "age"
      ]
    },
    "output_columns": {
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income"
      ]
    },
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "7e515f92-9991-4729-97f2-da0ca3377091",
  "timestamp": "2025-09-18T06:03:05.169169+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Joins positions and salary on age (inner)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "output_table": "example_join"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "age"
  ],
  "left_table": "positions",
  "right_table": "salary",
  "join_columns": [
    "age"
  ],
  "join_type": "inner",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "income"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "example_join": 2
    },
    "output_row_counts": {
      "example_join": 1
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "c1d51b91-7588-436c-b31f-9bbb37f085eb",
  "timestamp": "2025-09-18T06:03:06.711167+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Filters rows where income > 600",
  "meta_version": "1.0",
  "name": "SimpleFilter",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "example_join"
  },
  "transform_id": "SimpleFilter",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "income"
  ],
  "column": "income",
  "op": ">",
  "value": 600,
  "class_type": "SimpleFilter"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "age",
        "skill"
      ]
    ],
    "output_variables": [
      "concatted"
    ],
    "created_variables": [
      "concatted"
    ],
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income"
      ]
    },
    "output_columns": {
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income",
        "concatted"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "a7a0100c-3a85-4925-877e-e3dbe279512f",
  "timestamp": "2025-09-18T06:03:07.631170+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Concatenante multiple columns together in a dataframe",
  "meta_version": "1.0",
  "name": "ConcatColumns",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "example_join",
    "output_var": "concatted"
  },
  "transform_id": "ConcCols",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "age",
    "skill"
  ],
  "separator": "_",
  "class_type": "ConcatColumns"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      "income"
    ],
    "output_variables": [
      "income"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "24a95830-24a2-45a4-adc9-cc0ae5596420",
  "timestamp": "2025-09-18T06:03:07.939204+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Replaces values in 'income' where income >= 610 with 600",
  "meta_version": "1.0",
  "name": "ReplaceByCondition",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "example_join"
  },
  "transform_id": "ReplCond",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "income"
  ],
  "column": "income",
  "op": ">=",
  "value": 610,
  "replacement": 600,
  "class_type": "ReplaceByCondition"
}
{
  "log_info": {
    "input_tables": [
      "array_like"
    ],
    "output_tables": [
      "array_like"
    ],
    "input_variables": [
      "var3"
    ],
    "output_variables": [
      "var3"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "array_like": 4
    },
    "output_row_counts": {
      "array_like": 8
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "bda336d2-7300-4ebb-9df9-ea22cf739ac1",
  "timestamp": "2025-09-18T06:03:08.461203+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Explodes column 'var3' into multiple rows",
  "meta_version": "1.0",
  "name": "ExplodeColumn",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "array_like"
  },
  "transform_id": "ExplodeCol",
  "target_tables": [
    "array_like"
  ],
  "target_variables": [
    "var3"
  ],
  "column": "var3",
  "sep": " ",
  "outer": true,
  "class_type": "ExplodeColumn"
}
{
  "log_info": {
    "input_tables": [
      "decimal_table"
    ],
    "output_tables": [
      "decimal_table"
    ],
    "input_variables": [
      "value2"
    ],
    "output_variables": [
      "value2"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "29d75973-9a70-41d1-88d7-51749e5544bb",
  "timestamp": "2025-09-18T06:03:08.747207+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Rounds values in column 'value2' to 3 decimal places",
  "meta_version": "1.0",
  "name": "RoundNumber",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "decimal_table"
  },
  "transform_id": "RndNum",
  "target_tables": [
    "decimal_table"
  ],
  "target_variables": [
    "value2"
  ],
  "column": "value2",
  "decimals": 3,
  "class_type": "RoundNumber"
}
{
  "log_info": {
    "input_tables": [
      "date_table"
    ],
    "output_tables": [
      "date_table"
    ],
    "input_variables": [
      "event_date"
    ],
    "output_variables": [
      "event_date"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "44d4276c-c9cd-4c82-af80-af67f31a5be5",
  "timestamp": "2025-09-18T06:03:08.853202+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Truncates dates in column 'event_date' to month level",
  "meta_version": "1.0",
  "name": "TruncateDate",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "date_table"
  },
  "transform_id": "TruncDate",
  "target_tables": [
    "date_table"
  ],
  "target_variables": [
    "event_date"
  ],
  "column": "event_date",
  "level": "month",
  "class_type": "TruncateDate"
}
{
  "log_info": {
    "input_tables": [
      "date_table"
    ],
    "output_tables": [
      "date_table"
    ],
    "input_variables": [
      "event_date"
    ],
    "output_variables": [
      "event_date"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "822a5902-cb5b-4eb2-926f-54873b6d539d",
  "timestamp": "2025-09-18T06:03:08.961203+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Truncates dates in column 'event_date' to year level",
  "meta_version": "1.0",
  "name": "TruncateDate",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "date_table"
  },
  "transform_id": "TruncDate",
  "target_tables": [
    "date_table"
  ],
  "target_variables": [
    "event_date"
  ],
  "column": "event_date",
  "level": "year",
  "class_type": "TruncateDate"
}
{
  "log_info": {
    "input_tables": [
      "date_table"
    ],
    "output_tables": [
      "date_table"
    ],
    "input_variables": [
      "event_date"
    ],
    "output_variables": [
      "event_date"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "38ba7e65-a283-47ca-962d-6413cf950ba5",
  "timestamp": "2025-09-18T06:03:09.041205+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Sort table by event_date",
  "meta_version": "1.0",
  "name": "SortTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "date_table"
  },
  "transform_id": "SortTbl",
  "target_tables": [
    "date_table"
  ],
  "target_variables": [
    "event_date"
  ],
  "by": "event_date",
  "ascending": true,
  "class_type": "SortTable"
}
{
  "log_info": {
    "input_tables": [
      "location",
      "state"
    ],
    "output_tables": [
      "location"
    ],
    "input_variables": [
      [
        "city"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "location": 6,
      "state": 5
    },
    "output_row_counts": {
      "location": 6
    },
    "input_columns": {
      "location": [
        "name",
        "city",
        "country",
        "region"
      ],
      "state": [
        "city",
        "state"
      ]
    },
    "output_columns": {
      "location": [
        "city",
        "name",
        "country",
        "region",
        "state"
      ]
    },
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "3ad2d77e-f807-4cbd-b2c4-03dcf4a876f1",
  "timestamp": "2025-09-18T06:03:09.208203+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Joins location and state on city (outer)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "output_table": "location"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "location"
  ],
  "target_variables": [
    "city"
  ],
  "left_table": "location",
  "right_table": "state",
  "join_columns": [
    "city"
  ],
  "join_type": "outer",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "location"
    ],
    "output_tables": [
      "location"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "location": 6
    },
    "output_row_counts": {
      "location": 6
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "9f215c4b-7016-44e4-9f66-bd057c7b2bb4",
  "timestamp": "2025-09-18T06:03:09.911205+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "location"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "location"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "location",
      "example_join"
    ],
    "output_tables": [
      "super_table"
    ],
    "input_variables": [
      [
        "name"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "location": 6,
      "example_join": 1
    },
    "output_row_counts": {
      "super_table": 6
    },
    "input_columns": {
      "location": [
        "city",
        "name",
        "country",
        "region",
        "state"
      ],
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income",
        "concatted"
      ]
    },
    "output_columns": {
      "super_table": [
        "name",
        "city",
        "country",
        "region",
        "state",
        "age",
        "position",
        "skill",
        "income",
        "concatted"
      ]
    },
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "90a7f6a5-db34-4d66-bbee-bdda767d85e8",
  "timestamp": "2025-09-18T06:03:10.666724+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Joins location and example_join on name (outer)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "output_table": "super_table"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "super_table"
  ],
  "target_variables": [
    "name"
  ],
  "left_table": "location",
  "right_table": "example_join",
  "join_columns": [
    "name"
  ],
  "join_type": "outer",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "super_table"
    ],
    "output_tables": [
      "super_table"
    ],
    "input_variables": [
      "name"
    ],
    "output_variables": [
      "name"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "98f89b72-ca1f-4eab-ad8b-ca0863c239c9",
  "timestamp": "2025-09-18T06:03:12.355757+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Trims whitespace from column 'name'",
  "meta_version": "1.0",
  "name": "TrimWhitespace",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "super_table"
  },
  "transform_id": "Trim",
  "target_tables": [
    "super_table"
  ],
  "target_variables": [
    "name"
  ],
  "column": "name",
  "class_type": "TrimWhitespace"
}
{
  "log_info": {
    "input_tables": [
      "super_table"
    ],
    "output_tables": [
      "super_table"
    ],
    "input_variables": [
      "name"
    ],
    "output_variables": [
      "name"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "9f1f3b8d-4290-403a-a981-b5bd11af0bdd",
  "timestamp": "2025-09-18T06:03:12.363757+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Forces uppercase in column 'name'",
  "meta_version": "1.0",
  "name": "ForceCase",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "super_table"
  },
  "transform_id": "ForceCase",
  "target_tables": [
    "super_table"
  ],
  "target_variables": [
    "name"
  ],
  "column": "name",
  "case": "upper",
  "class_type": "ForceCase"
}
{"log_info": {"input_tables": ["array_like"], "output_tables": ["array_like_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "571dec90-b9a7-4cc0-866b-27e26f0d45bb", "timestamp": "2025-09-18T06:03:14.863325+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table array_like to ..\\test_tables\\prod\\job_1\\output\\array_like.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\array_like.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["decimal_table"], "output_tables": ["decimal_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "a18e516f-4c2b-44aa-bb06-a16e6f86ef5e", "timestamp": "2025-09-18T06:03:15.013328+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table decimal_table to ..\\test_tables\\prod\\job_1\\output\\decimal_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\decimal_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["state"], "output_tables": ["state_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "5344f393-1764-4d2e-ad50-6cd0ea6c97cf", "timestamp": "2025-09-18T06:03:15.119327+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table state to ..\\test_tables\\prod\\job_1\\output\\state.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\state.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_600"], "output_tables": ["salary_600_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "ccd9d6a1-b4de-494a-a9ec-a86510be6073", "timestamp": "2025-09-18T06:03:15.256328+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_600 to ..\\test_tables\\prod\\job_1\\output\\salary_600.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary_600.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_700"], "output_tables": ["salary_700_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "d749ef72-c92a-4bba-8d67-83a78907166e", "timestamp": "2025-09-18T06:03:15.392878+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_700 to ..\\test_tables\\prod\\job_1\\output\\salary_700.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary_700.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_500"], "output_tables": ["salary_500_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "f13e1c7f-badd-4ea8-9786-0933b25e2fbb", "timestamp": "2025-09-18T06:03:15.511879+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_500 to ..\\test_tables\\prod\\job_1\\output\\salary_500.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary_500.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_400"], "output_tables": ["salary_400_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "fe67b74a-dddc-47bf-9141-d63dc721b6f0", "timestamp": "2025-09-18T06:03:15.632879+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_400 to ..\\test_tables\\prod\\job_1\\output\\salary_400.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary_400.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_620"], "output_tables": ["salary_620_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "de591721-36b7-4d7d-b731-cd6bd98480a3", "timestamp": "2025-09-18T06:03:15.762879+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_620 to ..\\test_tables\\prod\\job_1\\output\\salary_620.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary_620.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["positions"], "output_tables": ["positions_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "cc31a71a-e408-4762-95a4-882fadc66115", "timestamp": "2025-09-18T06:03:15.988877+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table positions to ..\\test_tables\\prod\\job_1\\output\\positions.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\positions.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary"], "output_tables": ["salary_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "923bcb4a-584b-4a5f-be2e-08a228848941", "timestamp": "2025-09-18T06:03:16.228879+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary to ..\\test_tables\\prod\\job_1\\output\\salary.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["example_join"], "output_tables": ["example_join_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "ebc39015-b8a0-4380-a6a3-65851d9f7fc9", "timestamp": "2025-09-18T06:03:16.552915+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table example_join to ..\\test_tables\\prod\\job_1\\output\\example_join.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\example_join.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["date_table"], "output_tables": ["date_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "0020cdfe-a075-4e4f-98e3-3f43bd518a56", "timestamp": "2025-09-18T06:03:17.570936+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table date_table to ..\\test_tables\\prod\\job_1\\output\\date_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\date_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["location"], "output_tables": ["location_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "3795b665-f331-46ae-ba1c-218ac2e84f62", "timestamp": "2025-09-18T06:03:17.890932+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table location to ..\\test_tables\\prod\\job_1\\output\\location.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\location.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["super_table"], "output_tables": ["super_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "d8b7867f-0a46-410b-8c4f-0d130a20513f", "timestamp": "2025-09-18T06:03:18.452932+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table super_table to ..\\test_tables\\prod\\job_1\\output\\super_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\super_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
