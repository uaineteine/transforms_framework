{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [
      [
        "age",
        "name"
      ]
    ],
    "output_variables": [
      "concatenated_id"
    ],
    "created_variables": [
      "concatenated_id"
    ],
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "positions": [
        "age",
        "name",
        "var",
        "position",
        "skill"
      ]
    },
    "output_columns": {
      "positions": [
        "age",
        "name",
        "var",
        "position",
        "skill",
        "concatenated_id"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "24ad620a-abc3-4000-9c05-87b338935e29",
  "timestamp": "2025-09-15T14:32:45.429274+00:00",
  "executed_user": "runner",
  "macro_uuid": "9f2cd191-2599-4292-8af1-d45ade54838f",
  "event_type": "transform",
  "event_description": "Concatenante multiple columns together in a dataframe",
  "meta_version": "1.0",
  "name": "ConcatColumns",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "positions",
    "output_var": "concatenated_id"
  },
  "transform_id": "ConcCols",
  "target_tables": [
    "positions"
  ],
  "target_variables": [
    "age",
    "name"
  ],
  "separator": "_",
  "class_type": "ConcatColumns"
}
{
  "macro_uuid": "9f2cd191-2599-4292-8af1-d45ade54838f",
  "log_info": null,
  "uuid": "eb076b7e-fed3-4960-bb7c-1311c4d62f0f",
  "timestamp": "2025-09-15T14:32:45.429531+00:00",
  "executed_user": "runner",
  "event_type": "transform",
  "event_description": "Concatenates two ID columns with underscore separator",
  "meta_version": "1.0",
  "name": "ConcatenateIDs",
  "transform_type": "ConcatIDs",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "positions",
    "output_var": "concatenated_id"
  },
  "transform_list": [
    {
      "log_info": {
        "input_tables": [
          "positions"
        ],
        "output_tables": [
          "positions"
        ],
        "input_variables": [
          [
            "age",
            "name"
          ]
        ],
        "output_variables": [
          "concatenated_id"
        ],
        "created_variables": [
          "concatenated_id"
        ],
        "renamed_variables": null,
        "removed_variables": null,
        "input_row_counts": null,
        "output_row_counts": null,
        "input_columns": {
          "positions": [
            "age",
            "name",
            "var",
            "position",
            "skill"
          ]
        },
        "output_columns": {
          "positions": [
            "age",
            "name",
            "var",
            "position",
            "skill",
            "concatenated_id"
          ]
        },
        "num_input_frames": 1,
        "num_output_frames": 1
      },
      "persistent_uuid": false,
      "uuid": "24ad620a-abc3-4000-9c05-87b338935e29",
      "timestamp": "2025-09-15T14:32:45.429274+00:00",
      "executed_user": "runner",
      "macro_uuid": "9f2cd191-2599-4292-8af1-d45ade54838f",
      "log_exclusions": [
        "log_location",
        "indent_depth",
        "log_exclusions",
        "persistent_uuid"
      ],
      "log_location": "events_log/job_1/transforms.json",
      "indent_depth": 2,
      "event_type": "transform",
      "event_description": "Concatenante multiple columns together in a dataframe",
      "meta_version": "1.0",
      "name": "ConcatColumns",
      "transform_type": "TableTransform",
      "testable_transform": true,
      "version_pyspark": "4.0.1",
      "version_polars": "1.33.1",
      "version_pandas": "2.3.2",
      "version_python": "3.12.3",
      "params": {
        "df": "positions",
        "output_var": "concatenated_id"
      },
      "transform_id": "ConcCols",
      "target_tables": [
        "positions"
      ],
      "target_variables": [
        "age",
        "name"
      ],
      "separator": "_"
    }
  ],
  "class_type": "MacroTransform"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [
      "synthetic_aeuid"
    ],
    "output_variables": [
      "synthetic_aeuid"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "positions": 5
    },
    "output_row_counts": {
      "positions": 1
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "2714c020-b358-4dfe-be5d-0b1e6cc4b360",
  "timestamp": "2025-09-15T14:32:46.122160+00:00",
  "executed_user": "runner",
  "macro_uuid": "6e343555-b90f-4b04-aa63-21a028f8681d",
  "event_type": "transform",
  "event_description": "Drops rows with NA values in column 'synthetic_aeuid'",
  "meta_version": "1.0",
  "name": "DropNAValues",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "positions"
  },
  "transform_id": "DropNA",
  "target_tables": [
    "positions"
  ],
  "target_variables": [
    "synthetic_aeuid"
  ],
  "column": "synthetic_aeuid",
  "class_type": "DropNAValues"
}
{
  "macro_uuid": "6e343555-b90f-4b04-aa63-21a028f8681d",
  "log_info": null,
  "uuid": "a94ffaed-b1d3-48d4-a2c1-06e495110253",
  "timestamp": "2025-09-15T14:32:46.122267+00:00",
  "executed_user": "runner",
  "event_type": "transform",
  "event_description": "Drops missing IDs by removing rows with NA values in synthetic_aeuid",
  "meta_version": "1.0",
  "name": "DropMissingIDs",
  "transform_type": "DropMissing",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "positions"
  },
  "transform_list": [
    {
      "log_info": {
        "input_tables": [
          "positions"
        ],
        "output_tables": [
          "positions"
        ],
        "input_variables": [
          "synthetic_aeuid"
        ],
        "output_variables": [
          "synthetic_aeuid"
        ],
        "created_variables": null,
        "renamed_variables": null,
        "removed_variables": null,
        "input_row_counts": {
          "positions": 5
        },
        "output_row_counts": {
          "positions": 1
        },
        "input_columns": null,
        "output_columns": null,
        "num_input_frames": 1,
        "num_output_frames": 1
      },
      "persistent_uuid": false,
      "uuid": "2714c020-b358-4dfe-be5d-0b1e6cc4b360",
      "timestamp": "2025-09-15T14:32:46.122160+00:00",
      "executed_user": "runner",
      "macro_uuid": "6e343555-b90f-4b04-aa63-21a028f8681d",
      "log_exclusions": [
        "log_location",
        "indent_depth",
        "log_exclusions",
        "persistent_uuid"
      ],
      "log_location": "events_log/job_1/transforms.json",
      "indent_depth": 2,
      "event_type": "transform",
      "event_description": "Drops rows with NA values in column 'synthetic_aeuid'",
      "meta_version": "1.0",
      "name": "DropNAValues",
      "transform_type": "TableTransform",
      "testable_transform": true,
      "version_pyspark": "4.0.1",
      "version_polars": "1.33.1",
      "version_pandas": "2.3.2",
      "version_python": "3.12.3",
      "params": {
        "df": "positions"
      },
      "transform_id": "DropNA",
      "target_tables": [
        "positions"
      ],
      "target_variables": [
        "synthetic_aeuid"
      ],
      "column": "synthetic_aeuid"
    }
  ],
  "class_type": "MacroTransform"
}
{"log_info": {"input_tables": ["positions"], "output_tables": ["positions_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "bee6a2ca-1728-49bc-8f68-514489a5ff89", "timestamp": "2025-09-15T14:32:47.366355+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table positions to ../test_tables/output/positions.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/positions.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary"], "output_tables": ["salary_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "86b95c41-3eab-463d-aea5-64ecc055a610", "timestamp": "2025-09-15T14:32:47.531436+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary to ../test_tables/output/salary.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/salary.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["location"], "output_tables": ["location_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "32ab1f7a-39bb-4be8-9013-e1aeec069350", "timestamp": "2025-09-15T14:32:47.661701+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table location to ../test_tables/output/location.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/location.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["array_like"], "output_tables": ["array_like_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "0392928a-f6c6-4b75-b451-e33bcaa33a81", "timestamp": "2025-09-15T14:32:47.768134+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table array_like to ../test_tables/output/array_like.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/array_like.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["decimal_table"], "output_tables": ["decimal_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "505e1936-b675-4019-abe2-9fac931fe245", "timestamp": "2025-09-15T14:32:47.935621+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table decimal_table to ../test_tables/output/decimal_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/decimal_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["date_table"], "output_tables": ["date_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "9a8b3896-6b2a-4343-8354-f2f808509373", "timestamp": "2025-09-15T14:32:48.079014+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table date_table to ../test_tables/output/date_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/date_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["state"], "output_tables": ["state_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "dbe91c72-ab4c-4e63-a818-06dacec8881a", "timestamp": "2025-09-15T14:32:48.197313+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table state to ../test_tables/output/state.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/state.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary_600",
      "salary_700",
      "salary_500",
      "salary_400",
      "salary_620"
    ],
    "input_variables": [
      [
        "salary"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "salary": 6
    },
    "output_row_counts": {
      "salary_600": 2,
      "salary_700": 1,
      "salary_500": 1,
      "salary_400": 1,
      "salary_620": 1
    },
    "input_columns": {
      "salary": [
        "salary",
        "NAME",
        "age"
      ]
    },
    "output_columns": {
      "salary_600": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_700": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_500": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_400": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_620": [
        "salary",
        "NAME",
        "age"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 5
  },
  "uuid": "a2a6c554-ae0d-4095-b185-6ebd8ca2d2e9",
  "timestamp": "2025-09-16T08:46:57.408976+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Partitions a DataFrame into subtables by 'salary'",
  "meta_version": "1.0",
  "name": "PartitionByValue",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "salary"
  },
  "transform_id": "PartVal",
  "target_tables": [
    "salary_600",
    "salary_700",
    "salary_500",
    "salary_400",
    "salary_620"
  ],
  "target_variables": [
    "salary"
  ],
  "partition_column": "salary",
  "suffix_format": "_{value}",
  "class_type": "PartitionByValue"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [
      [
        "var"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": [
      [
        "var"
      ]
    ],
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "positions": [
        "age",
        "name",
        "var",
        "position",
        "skill"
      ]
    },
    "output_columns": {
      "positions": [
        "age",
        "name",
        "position",
        "skill"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "f2290bc7-df6d-4dae-bbf6-22c2c1905497",
  "timestamp": "2025-09-16T08:46:59.523982+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes specified variable(s) from a dataframe",
  "meta_version": "1.0",
  "name": "DropVariable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "positions"
  },
  "transform_id": "DropVar",
  "target_tables": [
    "positions"
  ],
  "target_variables": [
    "var"
  ],
  "deleted_variables": [
    "var"
  ],
  "class_type": "DropVariable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      [
        "salary",
        "age"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": [
      "NAME"
    ],
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "salary": [
        "salary",
        "NAME",
        "age"
      ]
    },
    "output_columns": {
      "salary": [
        "salary",
        "age"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "3907529c-17d5-4aad-aa3e-9e8024a9d926",
  "timestamp": "2025-09-16T08:46:59.621650+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Subsets a dataframe to retain only specified variable(s)",
  "meta_version": "1.0",
  "name": "SubsetTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "salary"
  },
  "transform_id": "SubsetTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "salary",
    "age"
  ],
  "class_type": "SubsetTable"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "positions": 5
    },
    "output_row_counts": {
      "positions": 5
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "ab60bf9e-d4d2-442c-b984-4700648fb5e1",
  "timestamp": "2025-09-16T08:46:59.716549+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "positions"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "positions"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "salary": 6
    },
    "output_row_counts": {
      "salary": 5
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "0591b92e-5b02-4ab3-9ac5-d495b25b4d34",
  "timestamp": "2025-09-16T08:47:00.349403+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "salary"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      [
        "salary"
      ]
    ],
    "output_variables": [
      [
        "income"
      ]
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "salary": [
        "salary",
        "age"
      ]
    },
    "output_columns": {
      "salary": [
        "income",
        "age"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "8e57d965-1e60-4eaa-b190-50aafd8ec897",
  "timestamp": "2025-09-16T08:47:00.832082+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Renames specified columns in a dataframe",
  "meta_version": "1.0",
  "name": "RenameTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "salary"
  },
  "transform_id": "RenmTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "salary"
  ],
  "rename_map": {
    "salary": "income"
  },
  "new_names": [
    "income"
  ],
  "class_type": "RenameTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "salary": 5
    },
    "output_row_counts": {
      "salary": 3
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "79a8e2a2-cee9-4ac8-aa80-f923b9f55fae",
  "timestamp": "2025-09-16T08:47:00.943912+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Filters rows in a dataframe using a backend-specific condition",
  "meta_version": "1.0",
  "name": "ComplexFilter",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "salary"
  },
  "transform_id": "RowFilter",
  "target_tables": [
    "salary"
  ],
  "target_variables": [],
  "condition_map": {
    "pyspark": {}
  },
  "backend": "pyspark",
  "condition_string": "\"pyspark\": lambda df: df.filter(col(\"income\") >= 600)",
  "class_type": "ComplexFilter"
}
{
  "log_info": {
    "input_tables": [
      "positions",
      "salary"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "age"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "positions": 5,
      "salary": 3
    },
    "output_row_counts": {
      "example_join": 2
    },
    "input_columns": {
      "positions": [
        "age",
        "name",
        "position",
        "skill"
      ],
      "salary": [
        "income",
        "age"
      ]
    },
    "output_columns": {
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income"
      ]
    },
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "fadd92a0-2ed1-4abd-9162-f3dafce182f0",
  "timestamp": "2025-09-16T08:47:01.361985+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Joins positions and salary on age (inner)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "output_table": "example_join"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "age"
  ],
  "left_table": "positions",
  "right_table": "salary",
  "join_columns": [
    "age"
  ],
  "join_type": "inner",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "income"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "example_join": 2
    },
    "output_row_counts": {
      "example_join": 1
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "5cf1709e-3223-4a66-b336-ee8e8cc516ec",
  "timestamp": "2025-09-16T08:47:02.556458+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Filters rows where income > 600",
  "meta_version": "1.0",
  "name": "SimpleFilter",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "example_join"
  },
  "transform_id": "SimpleFilter",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "income"
  ],
  "column": "income",
  "op": ">",
  "value": 600,
  "class_type": "SimpleFilter"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "age",
        "skill"
      ]
    ],
    "output_variables": [
      "concatted"
    ],
    "created_variables": [
      "concatted"
    ],
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income"
      ]
    },
    "output_columns": {
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income",
        "concatted"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "cf9cc1c5-0d8f-4219-94e4-b1c2247430dc",
  "timestamp": "2025-09-16T08:47:03.266818+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Concatenante multiple columns together in a dataframe",
  "meta_version": "1.0",
  "name": "ConcatColumns",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "example_join",
    "output_var": "concatted"
  },
  "transform_id": "ConcCols",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "age",
    "skill"
  ],
  "separator": "_",
  "class_type": "ConcatColumns"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      "income"
    ],
    "output_variables": [
      "income"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "6108752f-f8ed-480e-89f1-db655a2c0135",
  "timestamp": "2025-09-16T08:47:03.515370+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Replaces values in 'income' where income >= 610 with 600",
  "meta_version": "1.0",
  "name": "ReplaceByCondition",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "example_join"
  },
  "transform_id": "ReplCond",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "income"
  ],
  "column": "income",
  "op": ">=",
  "value": 610,
  "replacement": 600,
  "class_type": "ReplaceByCondition"
}
{
  "log_info": {
    "input_tables": [
      "array_like"
    ],
    "output_tables": [
      "array_like"
    ],
    "input_variables": [
      "var3"
    ],
    "output_variables": [
      "var3"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "array_like": 4
    },
    "output_row_counts": {
      "array_like": 8
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "8c069ad4-d6d4-4c2b-92e4-31aa2be20227",
  "timestamp": "2025-09-16T08:47:03.982658+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Explodes column 'var3' into multiple rows",
  "meta_version": "1.0",
  "name": "ExplodeColumn",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "array_like"
  },
  "transform_id": "ExplodeCol",
  "target_tables": [
    "array_like"
  ],
  "target_variables": [
    "var3"
  ],
  "column": "var3",
  "sep": " ",
  "outer": true,
  "class_type": "ExplodeColumn"
}
{
  "log_info": {
    "input_tables": [
      "decimal_table"
    ],
    "output_tables": [
      "decimal_table"
    ],
    "input_variables": [
      "value2"
    ],
    "output_variables": [
      "value2"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "c72874c5-b719-4d52-af3a-f38ed87ad86e",
  "timestamp": "2025-09-16T08:47:04.240819+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Rounds values in column 'value2' to 3 decimal places",
  "meta_version": "1.0",
  "name": "RoundNumber",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "decimal_table"
  },
  "transform_id": "RndNum",
  "target_tables": [
    "decimal_table"
  ],
  "target_variables": [
    "value2"
  ],
  "column": "value2",
  "decimals": 3,
  "class_type": "RoundNumber"
}
{
  "log_info": {
    "input_tables": [
      "date_table"
    ],
    "output_tables": [
      "date_table"
    ],
    "input_variables": [
      "event_date"
    ],
    "output_variables": [
      "event_date"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "e7e279b6-fd36-4b06-b5ad-cac0227bdc40",
  "timestamp": "2025-09-16T08:47:04.343598+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Truncates dates in column 'event_date' to month level",
  "meta_version": "1.0",
  "name": "TruncateDate",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "date_table"
  },
  "transform_id": "TruncDate",
  "target_tables": [
    "date_table"
  ],
  "target_variables": [
    "event_date"
  ],
  "column": "event_date",
  "level": "month",
  "class_type": "TruncateDate"
}
{
  "log_info": {
    "input_tables": [
      "date_table"
    ],
    "output_tables": [
      "date_table"
    ],
    "input_variables": [
      "event_date"
    ],
    "output_variables": [
      "event_date"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "9d291a7a-9ee4-480d-a8f4-b94a59d0bc1c",
  "timestamp": "2025-09-16T08:47:04.443729+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Truncates dates in column 'event_date' to year level",
  "meta_version": "1.0",
  "name": "TruncateDate",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "date_table"
  },
  "transform_id": "TruncDate",
  "target_tables": [
    "date_table"
  ],
  "target_variables": [
    "event_date"
  ],
  "column": "event_date",
  "level": "year",
  "class_type": "TruncateDate"
}
{
  "log_info": {
    "input_tables": [
      "date_table"
    ],
    "output_tables": [
      "date_table"
    ],
    "input_variables": [
      "event_date"
    ],
    "output_variables": [
      "event_date"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "1aff3b7a-b57b-4ff4-8b9e-4326fa48c099",
  "timestamp": "2025-09-16T08:47:04.525377+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Sort table by event_date",
  "meta_version": "1.0",
  "name": "SortTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "date_table"
  },
  "transform_id": "SortTbl",
  "target_tables": [
    "date_table"
  ],
  "target_variables": [
    "event_date"
  ],
  "by": "event_date",
  "ascending": true,
  "class_type": "SortTable"
}
{
  "log_info": {
    "input_tables": [
      "location",
      "state"
    ],
    "output_tables": [
      "location"
    ],
    "input_variables": [
      [
        "city"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "location": 6,
      "state": 5
    },
    "output_row_counts": {
      "location": 6
    },
    "input_columns": {
      "location": [
        "name",
        "city",
        "country",
        "region"
      ],
      "state": [
        "city",
        "state"
      ]
    },
    "output_columns": {
      "location": [
        "city",
        "name",
        "country",
        "region",
        "state"
      ]
    },
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "6cf94a11-b6fd-42e2-970a-b798d278db8a",
  "timestamp": "2025-09-16T08:47:04.663368+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Joins location and state on city (outer)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "output_table": "location"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "location"
  ],
  "target_variables": [
    "city"
  ],
  "left_table": "location",
  "right_table": "state",
  "join_columns": [
    "city"
  ],
  "join_type": "outer",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "location"
    ],
    "output_tables": [
      "location"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "location": 6
    },
    "output_row_counts": {
      "location": 6
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "73e614f9-4281-4d30-a0ba-4fd811495d98",
  "timestamp": "2025-09-16T08:47:05.233384+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "location"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "location"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "location",
      "example_join"
    ],
    "output_tables": [
      "super_table"
    ],
    "input_variables": [
      [
        "name"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "location": 6,
      "example_join": 1
    },
    "output_row_counts": {
      "super_table": 6
    },
    "input_columns": {
      "location": [
        "city",
        "name",
        "country",
        "region",
        "state"
      ],
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income",
        "concatted"
      ]
    },
    "output_columns": {
      "super_table": [
        "name",
        "city",
        "country",
        "region",
        "state",
        "age",
        "position",
        "skill",
        "income",
        "concatted"
      ]
    },
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "87600c7b-b9da-4fb3-966d-75a2accefe5c",
  "timestamp": "2025-09-16T08:47:05.766530+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Joins location and example_join on name (outer)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "output_table": "super_table"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "super_table"
  ],
  "target_variables": [
    "name"
  ],
  "left_table": "location",
  "right_table": "example_join",
  "join_columns": [
    "name"
  ],
  "join_type": "outer",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "super_table"
    ],
    "output_tables": [
      "super_table"
    ],
    "input_variables": [
      "name"
    ],
    "output_variables": [
      "name"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "4a97ac03-b055-45eb-a257-d6cb9bc8c952",
  "timestamp": "2025-09-16T08:47:06.897751+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Trims whitespace from column 'name'",
  "meta_version": "1.0",
  "name": "TrimWhitespace",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "super_table"
  },
  "transform_id": "Trim",
  "target_tables": [
    "super_table"
  ],
  "target_variables": [
    "name"
  ],
  "column": "name",
  "class_type": "TrimWhitespace"
}
{
  "log_info": {
    "input_tables": [
      "super_table"
    ],
    "output_tables": [
      "super_table"
    ],
    "input_variables": [
      "name"
    ],
    "output_variables": [
      "name"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "53ac8eb0-470e-4ddb-ab80-90d9defd3aa4",
  "timestamp": "2025-09-16T08:47:06.906986+00:00",
  "executed_user": "runner",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Forces uppercase in column 'name'",
  "meta_version": "1.0",
  "name": "ForceCase",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "super_table"
  },
  "transform_id": "ForceCase",
  "target_tables": [
    "super_table"
  ],
  "target_variables": [
    "name"
  ],
  "column": "name",
  "case": "upper",
  "class_type": "ForceCase"
}
{"log_info": {"input_tables": ["array_like"], "output_tables": ["array_like_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "d059bea2-41cf-4c69-9bc5-e037c0075154", "timestamp": "2025-09-16T08:47:08.666445+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table array_like to ../test_tables/prod/job_1/output/array_like.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/array_like.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["decimal_table"], "output_tables": ["decimal_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "5dcb653c-da59-4284-85a6-580dfbc10458", "timestamp": "2025-09-16T08:47:08.807378+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table decimal_table to ../test_tables/prod/job_1/output/decimal_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/decimal_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["state"], "output_tables": ["state_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "ee120f77-41f6-410f-be6d-d82d9d60a854", "timestamp": "2025-09-16T08:47:08.916127+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table state to ../test_tables/prod/job_1/output/state.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/state.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_600"], "output_tables": ["salary_600_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "8575e067-a1dd-4c51-a309-c801462a067c", "timestamp": "2025-09-16T08:47:09.058427+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_600 to ../test_tables/prod/job_1/output/salary_600.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/salary_600.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_700"], "output_tables": ["salary_700_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "2f4665aa-24b5-48ba-954e-24820b3079d6", "timestamp": "2025-09-16T08:47:09.187147+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_700 to ../test_tables/prod/job_1/output/salary_700.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/salary_700.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_500"], "output_tables": ["salary_500_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "16768b7d-670c-4e01-92ce-c9ca55932d07", "timestamp": "2025-09-16T08:47:09.309907+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_500 to ../test_tables/prod/job_1/output/salary_500.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/salary_500.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_400"], "output_tables": ["salary_400_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "8eb82a6a-21fe-4132-8173-a8e51028ced3", "timestamp": "2025-09-16T08:47:09.431595+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_400 to ../test_tables/prod/job_1/output/salary_400.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/salary_400.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_620"], "output_tables": ["salary_620_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "ca6e8b6a-fcd4-4251-954b-215eb4855a01", "timestamp": "2025-09-16T08:47:09.535788+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_620 to ../test_tables/prod/job_1/output/salary_620.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/salary_620.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["positions"], "output_tables": ["positions_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "4e71ac61-4995-40e1-a9e4-13fa64eec147", "timestamp": "2025-09-16T08:47:09.694692+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table positions to ../test_tables/prod/job_1/output/positions.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/positions.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary"], "output_tables": ["salary_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "215b9a1d-c0a6-4635-8d3c-28b1f9b1f44a", "timestamp": "2025-09-16T08:47:09.864271+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary to ../test_tables/prod/job_1/output/salary.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/salary.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["example_join"], "output_tables": ["example_join_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "cc98aa53-b879-44e4-a066-a604b4f14806", "timestamp": "2025-09-16T08:47:10.096283+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table example_join to ../test_tables/prod/job_1/output/example_join.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/example_join.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["date_table"], "output_tables": ["date_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "15c8c3f3-b460-45a2-8465-c1ff344461b3", "timestamp": "2025-09-16T08:47:10.296432+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table date_table to ../test_tables/prod/job_1/output/date_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/date_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["location"], "output_tables": ["location_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "15a16b2d-0b96-4e72-b444-373b6ee30b1f", "timestamp": "2025-09-16T08:47:10.530133+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table location to ../test_tables/prod/job_1/output/location.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/location.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["super_table"], "output_tables": ["super_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "3691bb65-fe86-483f-8257-c4bea168e9dd", "timestamp": "2025-09-16T08:47:10.936202+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table super_table to ../test_tables/prod/job_1/output/super_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/prod/job_1/output/super_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      "salary"
    ],
    "output_variables": [
      "salary"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "62c7d549-b1c3-46e2-92ce-285a2890d9c7",
  "timestamp": "2025-09-17T16:17:24.136465+00:00",
  "executed_user": "runner",
  "macro_uuid": "9a20a694-f9f3-45af-b893-99312af3fa72",
  "event_type": "transform",
  "event_description": "Replaces values in 'salary' where salary > 650 with 650",
  "meta_version": "1.0",
  "name": "ReplaceByCondition",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "salary"
  },
  "transform_id": "ReplCond",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "salary"
  ],
  "column": "salary",
  "op": ">",
  "value": 650,
  "replacement": 650,
  "class_type": "ReplaceByCondition"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      "salary"
    ],
    "output_variables": [
      "salary"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "743c725e-bdc3-4fe1-ac18-c815ba13748b",
  "timestamp": "2025-09-17T16:17:24.136727+00:00",
  "executed_user": "runner",
  "macro_uuid": "9a20a694-f9f3-45af-b893-99312af3fa72",
  "event_type": "transform",
  "event_description": "Replaces values in 'salary' where salary < 450 with 450",
  "meta_version": "1.0",
  "name": "ReplaceByCondition",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "salary"
  },
  "transform_id": "ReplCond",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "salary"
  ],
  "column": "salary",
  "op": "<",
  "value": 450,
  "replacement": 450,
  "class_type": "ReplaceByCondition"
}
{
  "macro_uuid": "9a20a694-f9f3-45af-b893-99312af3fa72",
  "log_info": null,
  "uuid": "f5bd5a91-1e93-4597-87ce-5d1b2b9f0d21",
  "timestamp": "2025-09-17T16:17:24.136803+00:00",
  "executed_user": "runner",
  "event_type": "transform",
  "event_description": "Sets maximum value on variable",
  "meta_version": "1.0",
  "name": "TopCode",
  "transform_type": "TopCode",
  "testable_transform": true,
  "version_pyspark": "4.0.1",
  "version_polars": "1.33.1",
  "version_pandas": "2.3.2",
  "version_python": "3.12.3",
  "params": {
    "df": "salary"
  },
  "transform_list": [
    {
      "log_info": {
        "input_tables": [
          "salary"
        ],
        "output_tables": [
          "salary"
        ],
        "input_variables": [
          "salary"
        ],
        "output_variables": [
          "salary"
        ],
        "created_variables": null,
        "renamed_variables": null,
        "removed_variables": null,
        "input_row_counts": null,
        "output_row_counts": null,
        "input_columns": null,
        "output_columns": null,
        "num_input_frames": 1,
        "num_output_frames": 1
      },
      "persistent_uuid": false,
      "uuid": "62c7d549-b1c3-46e2-92ce-285a2890d9c7",
      "timestamp": "2025-09-17T16:17:24.136465+00:00",
      "executed_user": "runner",
      "macro_uuid": "9a20a694-f9f3-45af-b893-99312af3fa72",
      "log_exclusions": [
        "log_location",
        "indent_depth",
        "log_exclusions",
        "persistent_uuid"
      ],
      "log_location": "events_log/job_1/transforms.json",
      "indent_depth": 2,
      "event_type": "transform",
      "event_description": "Replaces values in 'salary' where salary > 650 with 650",
      "meta_version": "1.0",
      "name": "ReplaceByCondition",
      "transform_type": "TableTransform",
      "testable_transform": true,
      "version_pyspark": "4.0.1",
      "version_polars": "1.33.1",
      "version_pandas": "2.3.2",
      "version_python": "3.12.3",
      "params": {
        "df": "salary"
      },
      "transform_id": "ReplCond",
      "target_tables": [
        "salary"
      ],
      "target_variables": [
        "salary"
      ],
      "column": "salary",
      "op": ">",
      "value": 650,
      "replacement": 650
    },
    {
      "log_info": {
        "input_tables": [
          "salary"
        ],
        "output_tables": [
          "salary"
        ],
        "input_variables": [
          "salary"
        ],
        "output_variables": [
          "salary"
        ],
        "created_variables": null,
        "renamed_variables": null,
        "removed_variables": null,
        "input_row_counts": null,
        "output_row_counts": null,
        "input_columns": null,
        "output_columns": null,
        "num_input_frames": 1,
        "num_output_frames": 1
      },
      "persistent_uuid": false,
      "uuid": "743c725e-bdc3-4fe1-ac18-c815ba13748b",
      "timestamp": "2025-09-17T16:17:24.136727+00:00",
      "executed_user": "runner",
      "macro_uuid": "9a20a694-f9f3-45af-b893-99312af3fa72",
      "log_exclusions": [
        "log_location",
        "indent_depth",
        "log_exclusions",
        "persistent_uuid"
      ],
      "log_location": "events_log/job_1/transforms.json",
      "indent_depth": 2,
      "event_type": "transform",
      "event_description": "Replaces values in 'salary' where salary < 450 with 450",
      "meta_version": "1.0",
      "name": "ReplaceByCondition",
      "transform_type": "TableTransform",
      "testable_transform": true,
      "version_pyspark": "4.0.1",
      "version_polars": "1.33.1",
      "version_pandas": "2.3.2",
      "version_python": "3.12.3",
      "params": {
        "df": "salary"
      },
      "transform_id": "ReplCond",
      "target_tables": [
        "salary"
      ],
      "target_variables": [
        "salary"
      ],
      "column": "salary",
      "op": "<",
      "value": 450,
      "replacement": 450
    }
  ],
  "class_type": "MacroTransform"
}
{"log_info": {"input_tables": ["positions"], "output_tables": ["positions_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "340b8a60-1673-4614-b531-4c53755e981c", "timestamp": "2025-09-17T16:17:25.609107+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table positions to ../test_tables/output/positions.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/positions.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary"], "output_tables": ["salary_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "e554714f-8f4b-4d85-9b6a-77abe5944193", "timestamp": "2025-09-17T16:17:25.781368+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary to ../test_tables/output/salary.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/salary.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["location"], "output_tables": ["location_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "f796809e-e951-4ed8-91ba-2e64543ddd75", "timestamp": "2025-09-17T16:17:25.915317+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table location to ../test_tables/output/location.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/location.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["array_like"], "output_tables": ["array_like_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "42494b31-326c-4420-88e0-10835cea14cd", "timestamp": "2025-09-17T16:17:26.026554+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table array_like to ../test_tables/output/array_like.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/array_like.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["decimal_table"], "output_tables": ["decimal_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "efb3bbc1-3976-4475-8304-140166e92cce", "timestamp": "2025-09-17T16:17:26.189843+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table decimal_table to ../test_tables/output/decimal_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/decimal_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["date_table"], "output_tables": ["date_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "a91289d4-7b4a-4144-88ec-608309d441d7", "timestamp": "2025-09-17T16:17:26.338322+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table date_table to ../test_tables/output/date_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/date_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["state"], "output_tables": ["state_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "0a5fdfbf-cb02-4d28-8996-da2b17afee26", "timestamp": "2025-09-17T16:17:26.438549+00:00", "executed_user": "runner", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table state to ../test_tables/output/state.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "../test_tables/output/state.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
