{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary_600",
      "salary_700",
      "salary_500",
      "salary_400",
      "salary_620"
    ],
    "input_variables": [
      [
        "salary"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "salary": 6
    },
    "output_row_counts": {
      "salary_600": 2,
      "salary_700": 1,
      "salary_500": 1,
      "salary_400": 1,
      "salary_620": 1
    },
    "input_columns": {
      "salary": [
        "salary",
        "NAME",
        "age"
      ]
    },
    "output_columns": {
      "salary_600": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_700": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_500": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_400": [
        "salary",
        "NAME",
        "age"
      ],
      "salary_620": [
        "salary",
        "NAME",
        "age"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 5
  },
  "uuid": "302ce4f5-16a9-41e7-b950-6daf19346f35",
  "timestamp": "2025-09-15T07:13:13.544050+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Partitions a DataFrame into subtables by 'salary'",
  "meta_version": "1.0",
  "name": "PartitionByValue",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "salary"
  },
  "transform_id": "PartVal",
  "target_tables": [
    "salary_600",
    "salary_700",
    "salary_500",
    "salary_400",
    "salary_620"
  ],
  "target_variables": [
    "salary"
  ],
  "partition_column": "salary",
  "suffix_format": "_{value}",
  "class_type": "PartitionByValue"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [
      [
        "var"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": [
      [
        "var"
      ]
    ],
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "positions": [
        "age",
        "name",
        "var",
        "position",
        "skill"
      ]
    },
    "output_columns": {
      "positions": [
        "age",
        "name",
        "position",
        "skill"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "9986ac27-efce-44dd-882c-81c731327b35",
  "timestamp": "2025-09-15T07:13:16.184116+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes specified variable(s) from a dataframe",
  "meta_version": "1.0",
  "name": "DropVariable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "positions"
  },
  "transform_id": "DropVar",
  "target_tables": [
    "positions"
  ],
  "target_variables": [
    "var"
  ],
  "deleted_variables": [
    "var"
  ],
  "class_type": "DropVariable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      [
        "salary",
        "age"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": [
      "NAME"
    ],
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "salary": [
        "salary",
        "NAME",
        "age"
      ]
    },
    "output_columns": {
      "salary": [
        "salary",
        "age"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "553f33fd-cfff-4bf4-a178-f15d5570f506",
  "timestamp": "2025-09-15T07:13:16.318118+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Subsets a dataframe to retain only specified variable(s)",
  "meta_version": "1.0",
  "name": "SubsetTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "salary"
  },
  "transform_id": "SubsetTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "salary",
    "age"
  ],
  "class_type": "SubsetTable"
}
{
  "log_info": {
    "input_tables": [
      "positions"
    ],
    "output_tables": [
      "positions"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "positions": 5
    },
    "output_row_counts": {
      "positions": 5
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "eb42dfa4-a966-4b1b-95c8-4aeb6e3609ca",
  "timestamp": "2025-09-15T07:13:16.425115+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "positions"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "positions"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "salary": 6
    },
    "output_row_counts": {
      "salary": 5
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "b4bc451a-940d-40f6-9bcc-545d6f1639e0",
  "timestamp": "2025-09-15T07:13:17.229152+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "salary"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [
      [
        "salary"
      ]
    ],
    "output_variables": [
      [
        "income"
      ]
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "salary": [
        "salary",
        "age"
      ]
    },
    "output_columns": {
      "salary": [
        "income",
        "age"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "355355c1-1b06-4e1d-ba17-55dd2761a9fb",
  "timestamp": "2025-09-15T07:13:17.897188+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Renames specified columns in a dataframe",
  "meta_version": "1.0",
  "name": "RenameTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "salary"
  },
  "transform_id": "RenmTbl",
  "target_tables": [
    "salary"
  ],
  "target_variables": [
    "salary"
  ],
  "rename_map": {
    "salary": "income"
  },
  "new_names": [
    "income"
  ],
  "class_type": "RenameTable"
}
{
  "log_info": {
    "input_tables": [
      "salary"
    ],
    "output_tables": [
      "salary"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "salary": 5
    },
    "output_row_counts": {
      "salary": 3
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "7208d848-4804-41b7-9a53-cfad582e1de6",
  "timestamp": "2025-09-15T07:13:18.072191+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Filters rows in a dataframe using a backend-specific condition",
  "meta_version": "1.0",
  "name": "ComplexFilter",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "salary"
  },
  "transform_id": "RowFilter",
  "target_tables": [
    "salary"
  ],
  "target_variables": [],
  "condition_map": {
    "pyspark": {}
  },
  "backend": "pyspark",
  "condition_string": "\"pyspark\": lambda df: df.filter(col(\"income\") >= 600)",
  "class_type": "ComplexFilter"
}
{
  "log_info": {
    "input_tables": [
      "positions",
      "salary"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "age"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "positions": 5,
      "salary": 3
    },
    "output_row_counts": {
      "example_join": 2
    },
    "input_columns": {
      "positions": [
        "age",
        "name",
        "position",
        "skill"
      ],
      "salary": [
        "income",
        "age"
      ]
    },
    "output_columns": {
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income"
      ]
    },
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "88fb3a70-6d99-4a61-bea2-011e2e0bb6b2",
  "timestamp": "2025-09-15T07:13:18.642190+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Joins positions and salary on age (inner)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "output_table": "example_join"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "age"
  ],
  "left_table": "positions",
  "right_table": "salary",
  "join_columns": [
    "age"
  ],
  "join_type": "inner",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "income"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "example_join": 2
    },
    "output_row_counts": {
      "example_join": 1
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "298706fb-4462-4019-8c08-334319dace74",
  "timestamp": "2025-09-15T07:13:20.279276+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Filters rows where income > 600",
  "meta_version": "1.0",
  "name": "SimpleFilter",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "example_join"
  },
  "transform_id": "SimpleFilter",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "income"
  ],
  "column": "income",
  "op": ">",
  "value": 600,
  "class_type": "SimpleFilter"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      [
        "age",
        "skill"
      ]
    ],
    "output_variables": [
      "concatted"
    ],
    "created_variables": [
      "concatted"
    ],
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": {
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income"
      ]
    },
    "output_columns": {
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income",
        "concatted"
      ]
    },
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "8b36695e-9524-4596-ba7c-772e726f89ff",
  "timestamp": "2025-09-15T07:13:21.226793+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Concatenante multiple columns together in a dataframe",
  "meta_version": "1.0",
  "name": "ConcatColumns",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "example_join",
    "output_var": "concatted"
  },
  "transform_id": "ConcCols",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "age",
    "skill"
  ],
  "separator": "_",
  "class_type": "ConcatColumns"
}
{
  "log_info": {
    "input_tables": [
      "example_join"
    ],
    "output_tables": [
      "example_join"
    ],
    "input_variables": [
      "income"
    ],
    "output_variables": [
      "income"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "584b5cb7-cb0d-4b9f-a17a-3aa8bc92231f",
  "timestamp": "2025-09-15T07:13:21.529313+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Replaces values in 'income' where income >= 610 with 600",
  "meta_version": "1.0",
  "name": "ReplaceByCondition",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "example_join"
  },
  "transform_id": "ReplCond",
  "target_tables": [
    "example_join"
  ],
  "target_variables": [
    "income"
  ],
  "column": "income",
  "op": ">=",
  "value": 610,
  "replacement": 600,
  "class_type": "ReplaceByCondition"
}
{
  "log_info": {
    "input_tables": [
      "array_like"
    ],
    "output_tables": [
      "array_like"
    ],
    "input_variables": [
      "var3"
    ],
    "output_variables": [
      "var3"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "array_like": 4
    },
    "output_row_counts": {
      "array_like": 8
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "a4b55b1f-6fc1-4ae4-8032-43000688b71d",
  "timestamp": "2025-09-15T07:13:22.154351+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Explodes column 'var3' into multiple rows",
  "meta_version": "1.0",
  "name": "ExplodeColumn",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "array_like"
  },
  "transform_id": "ExplodeCol",
  "target_tables": [
    "array_like"
  ],
  "target_variables": [
    "var3"
  ],
  "column": "var3",
  "sep": " ",
  "outer": true,
  "class_type": "ExplodeColumn"
}
{
  "log_info": {
    "input_tables": [
      "decimal_table"
    ],
    "output_tables": [
      "decimal_table"
    ],
    "input_variables": [
      "value2"
    ],
    "output_variables": [
      "value2"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "a8227471-6cc8-44f3-8fea-467ddf23f777",
  "timestamp": "2025-09-15T07:13:22.444381+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Rounds values in column 'value2' to 3 decimal places",
  "meta_version": "1.0",
  "name": "RoundNumber",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "decimal_table"
  },
  "transform_id": "RndNum",
  "target_tables": [
    "decimal_table"
  ],
  "target_variables": [
    "value2"
  ],
  "column": "value2",
  "decimals": 3,
  "class_type": "RoundNumber"
}
{
  "log_info": {
    "input_tables": [
      "date_table"
    ],
    "output_tables": [
      "date_table"
    ],
    "input_variables": [
      "event_date"
    ],
    "output_variables": [
      "event_date"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "cf16f4a5-80aa-4a54-864f-c4e75ff19800",
  "timestamp": "2025-09-15T07:13:22.576383+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Truncates dates in column 'event_date' to month level",
  "meta_version": "1.0",
  "name": "TruncateDate",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "date_table"
  },
  "transform_id": "TruncDate",
  "target_tables": [
    "date_table"
  ],
  "target_variables": [
    "event_date"
  ],
  "column": "event_date",
  "level": "month",
  "class_type": "TruncateDate"
}
{
  "log_info": {
    "input_tables": [
      "date_table"
    ],
    "output_tables": [
      "date_table"
    ],
    "input_variables": [
      "event_date"
    ],
    "output_variables": [
      "event_date"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "e6e124ce-8104-4703-8d82-75dc715c7b67",
  "timestamp": "2025-09-15T07:13:22.678381+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Truncates dates in column 'event_date' to year level",
  "meta_version": "1.0",
  "name": "TruncateDate",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "date_table"
  },
  "transform_id": "TruncDate",
  "target_tables": [
    "date_table"
  ],
  "target_variables": [
    "event_date"
  ],
  "column": "event_date",
  "level": "year",
  "class_type": "TruncateDate"
}
{
  "log_info": {
    "input_tables": [
      "date_table"
    ],
    "output_tables": [
      "date_table"
    ],
    "input_variables": [
      "event_date"
    ],
    "output_variables": [
      "event_date"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "58250df5-21bd-466e-bc1e-091aa21e75dd",
  "timestamp": "2025-09-15T07:13:22.771381+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Sort table by event_date",
  "meta_version": "1.0",
  "name": "SortTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "date_table"
  },
  "transform_id": "SortTbl",
  "target_tables": [
    "date_table"
  ],
  "target_variables": [
    "event_date"
  ],
  "by": "event_date",
  "ascending": true,
  "class_type": "SortTable"
}
{
  "log_info": {
    "input_tables": [
      "location",
      "state"
    ],
    "output_tables": [
      "location"
    ],
    "input_variables": [
      [
        "city"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "location": 6,
      "state": 5
    },
    "output_row_counts": {
      "location": 6
    },
    "input_columns": {
      "location": [
        "name",
        "city",
        "country",
        "region"
      ],
      "state": [
        "city",
        "state"
      ]
    },
    "output_columns": {
      "location": [
        "city",
        "name",
        "country",
        "region",
        "state"
      ]
    },
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "c44b4841-906a-468f-8721-8fb30302600b",
  "timestamp": "2025-09-15T07:13:22.948380+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Joins location and state on city (outer)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "output_table": "location"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "location"
  ],
  "target_variables": [
    "city"
  ],
  "left_table": "location",
  "right_table": "state",
  "join_columns": [
    "city"
  ],
  "join_type": "outer",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "location"
    ],
    "output_tables": [
      "location"
    ],
    "input_variables": [],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "location": 6
    },
    "output_row_counts": {
      "location": 6
    },
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "ce9a57e4-3037-426c-a1f6-fb1d66ca1003",
  "timestamp": "2025-09-15T07:13:23.608381+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Removes duplicate rows from a DataFrame",
  "meta_version": "1.0",
  "name": "DistinctTable",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "location"
  },
  "transform_id": "DistinctTbl",
  "target_tables": [
    "location"
  ],
  "target_variables": [],
  "class_type": "DistinctTable"
}
{
  "log_info": {
    "input_tables": [
      "location",
      "example_join"
    ],
    "output_tables": [
      "super_table"
    ],
    "input_variables": [
      [
        "name"
      ]
    ],
    "output_variables": [],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": {
      "location": 6,
      "example_join": 1
    },
    "output_row_counts": {
      "super_table": 6
    },
    "input_columns": {
      "location": [
        "city",
        "name",
        "country",
        "region",
        "state"
      ],
      "example_join": [
        "age",
        "name",
        "position",
        "skill",
        "income",
        "concatted"
      ]
    },
    "output_columns": {
      "super_table": [
        "name",
        "city",
        "country",
        "region",
        "state",
        "age",
        "position",
        "skill",
        "income",
        "concatted"
      ]
    },
    "num_input_frames": 2,
    "num_output_frames": 1
  },
  "uuid": "b366feab-30ee-4938-9b0b-52dd30648e2e",
  "timestamp": "2025-09-15T07:13:24.790452+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Joins location and example_join on name (outer)",
  "meta_version": "1.0",
  "name": "JoinTable",
  "transform_type": "TableTransform",
  "testable_transform": true,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "output_table": "super_table"
  },
  "transform_id": "JoinTbl",
  "target_tables": [
    "super_table"
  ],
  "target_variables": [
    "name"
  ],
  "left_table": "location",
  "right_table": "example_join",
  "join_columns": [
    "name"
  ],
  "join_type": "outer",
  "suffixes": [
    "_left",
    "_right"
  ],
  "class_type": "JoinTable"
}
{
  "log_info": {
    "input_tables": [
      "super_table"
    ],
    "output_tables": [
      "super_table"
    ],
    "input_variables": [
      "name"
    ],
    "output_variables": [
      "name"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "4cce9cd4-e378-46c5-b8ce-e67452cd9e77",
  "timestamp": "2025-09-15T07:13:26.478475+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Trims whitespace from column 'name'",
  "meta_version": "1.0",
  "name": "TrimWhitespace",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "super_table"
  },
  "transform_id": "Trim",
  "target_tables": [
    "super_table"
  ],
  "target_variables": [
    "name"
  ],
  "column": "name",
  "class_type": "TrimWhitespace"
}
{
  "log_info": {
    "input_tables": [
      "super_table"
    ],
    "output_tables": [
      "super_table"
    ],
    "input_variables": [
      "name"
    ],
    "output_variables": [
      "name"
    ],
    "created_variables": null,
    "renamed_variables": null,
    "removed_variables": null,
    "input_row_counts": null,
    "output_row_counts": null,
    "input_columns": null,
    "output_columns": null,
    "num_input_frames": 1,
    "num_output_frames": 1
  },
  "uuid": "e36cc862-1249-4931-ab8f-6c21cb51f2e9",
  "timestamp": "2025-09-15T07:13:26.487476+00:00",
  "executed_user": "Daniel",
  "macro_uuid": null,
  "event_type": "transform",
  "event_description": "Forces uppercase in column 'name'",
  "meta_version": "1.0",
  "name": "ForceCase",
  "transform_type": "TableTransform",
  "testable_transform": false,
  "version_pyspark": "4.0.0",
  "version_polars": "1.32.3",
  "version_pandas": "2.3.2",
  "version_python": "3.10.8",
  "params": {
    "df": "super_table"
  },
  "transform_id": "ForceCase",
  "target_tables": [
    "super_table"
  ],
  "target_variables": [
    "name"
  ],
  "column": "name",
  "case": "upper",
  "class_type": "ForceCase"
}
{"log_info": {"input_tables": ["array_like"], "output_tables": ["array_like_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "bd7e5115-0c69-4bad-8bfc-bb6ef2d2a521", "timestamp": "2025-09-15T07:13:28.986635+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table array_like to ..\\test_tables\\prod\\job_1\\output\\array_like.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\array_like.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["decimal_table"], "output_tables": ["decimal_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "742a0476-b1d5-4398-a2b5-aa89754d3d47", "timestamp": "2025-09-15T07:13:29.146634+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table decimal_table to ..\\test_tables\\prod\\job_1\\output\\decimal_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\decimal_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["state"], "output_tables": ["state_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "96055191-3b29-44d4-a55f-25cca3001f72", "timestamp": "2025-09-15T07:13:29.258636+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table state to ..\\test_tables\\prod\\job_1\\output\\state.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\state.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_600"], "output_tables": ["salary_600_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "6d5240fa-2790-4b2a-9852-2c9ea940718a", "timestamp": "2025-09-15T07:13:29.404636+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_600 to ..\\test_tables\\prod\\job_1\\output\\salary_600.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary_600.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_700"], "output_tables": ["salary_700_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "e856282a-8e92-4df8-9136-97fc53a6ca8a", "timestamp": "2025-09-15T07:13:29.553147+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_700 to ..\\test_tables\\prod\\job_1\\output\\salary_700.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary_700.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_500"], "output_tables": ["salary_500_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "2f794e78-1e0f-47e1-ab77-29d91e913226", "timestamp": "2025-09-15T07:13:29.688150+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_500 to ..\\test_tables\\prod\\job_1\\output\\salary_500.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary_500.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_400"], "output_tables": ["salary_400_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "6a4b68c5-25b0-4b68-9dd3-1b08910469ca", "timestamp": "2025-09-15T07:13:29.817149+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_400 to ..\\test_tables\\prod\\job_1\\output\\salary_400.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary_400.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary_620"], "output_tables": ["salary_620_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "b8be3c7c-39e8-4fda-a639-9ca88753f8f1", "timestamp": "2025-09-15T07:13:29.946152+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary_620 to ..\\test_tables\\prod\\job_1\\output\\salary_620.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary_620.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["positions"], "output_tables": ["positions_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "3d9e4b43-16a7-4081-ba75-11f3c021f5e3", "timestamp": "2025-09-15T07:13:30.195148+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table positions to ..\\test_tables\\prod\\job_1\\output\\positions.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\positions.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["salary"], "output_tables": ["salary_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "1a328d1b-a2d2-4b3d-94cf-f3f0919d6a89", "timestamp": "2025-09-15T07:13:30.431149+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table salary to ..\\test_tables\\prod\\job_1\\output\\salary.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\salary.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["example_join"], "output_tables": ["example_join_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "92e49de2-9592-48f1-9e2e-8be508dfa910", "timestamp": "2025-09-15T07:13:30.860148+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table example_join to ..\\test_tables\\prod\\job_1\\output\\example_join.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\example_join.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["date_table"], "output_tables": ["date_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "845c9984-5075-4ed6-9da5-c642f22b36b5", "timestamp": "2025-09-15T07:13:31.106150+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table date_table to ..\\test_tables\\prod\\job_1\\output\\date_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\date_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["location"], "output_tables": ["location_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "be36df62-6fcb-475c-a3ed-64ae1048cb7d", "timestamp": "2025-09-15T07:13:31.418659+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table location to ..\\test_tables\\prod\\job_1\\output\\location.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\location.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
{"log_info": {"input_tables": ["super_table"], "output_tables": ["super_table_written"], "input_variables": [], "output_variables": [], "created_variables": null, "renamed_variables": null, "removed_variables": null, "num_input_frames": 1, "num_output_frames": 1}, "uuid": "9479fb29-2e28-4748-a016-b06d420cd804", "timestamp": "2025-09-15T07:13:32.115178+00:00", "executed_user": "Daniel", "macro_uuid": null, "event_type": "write", "event_description": "Wrote table super_table to ..\\test_tables\\prod\\job_1\\output\\super_table.parquet as parquet", "meta_version": "1.0", "name": "Write", "testable_transform": false, "filepath": "..\\test_tables\\prod\\job_1\\output\\super_table.parquet", "out_format": "parquet", "class_type": "PipelineEvent"}
